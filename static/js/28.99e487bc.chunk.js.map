{"version":3,"file":"static/js/28.99e487bc.chunk.js","mappings":"oKACA,QAAiC,uCAAjC,EAA4F,0CAA5F,EAAqJ,qCAArJ,EAAkM,8BAAlM,EAA0O,gCAA1O,EAA0R,sC,sBCO1R,MAyFA,EAzFuBA,KAErB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,aAC3BG,EAAoBC,IAAyBJ,EAAAA,EAAAA,WAAS,GA0CvDK,EAAmBA,KACvBD,GAAsB,GACtBE,OAAOC,SAASC,QAAQ,EAG1B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAsBC,SAAA,EACpCH,EAAAA,EAAAA,MAAA,QAAMI,GAAG,oBAAoBC,SAhCPC,IACxBA,EAAMC,iBACN,MAAMC,EAAW,IAAIC,SAASH,EAAMI,QAC9BC,EAAmBC,OAAOC,YAAYL,EAASM,WAE/CC,EApBqBC,KAC3B,IAAIC,EAAQ,IAAIC,OAAO,gBAEvB,OAAKF,EAAgBG,aAGhBH,EAAgBI,aAAgBH,EAAMI,KAAKL,EAAgBI,aAG3DJ,EAAgBM,aAGd,GAFEC,EAAAA,GAHAC,EAAAA,GAHAC,EAAAA,EAQA,EAQKC,CAAoBf,GAC9BI,EACFzB,EAAYyB,IAEZzB,EAAY,IACZqB,EAAiBgB,KAAOnC,EACxBoC,aAAaC,QAAQlB,EAAiBQ,aAAcW,KAAKC,UAAUpB,IACnEhB,GAAsB,GACxB,EAmB2DM,UAAWC,EAAyBC,SAAA,EAC3FH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACE6B,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,MAAM,gBAAgB9B,GAAG,eAAe+B,KAAK,UACpDH,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,MAAM,cAAc9B,GAAG,cAAc+B,KAAK,OAAOC,QAAQ,eAAgBC,MAAM,yCACtFL,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,MAAM,eAAe9B,GAAG,eAAe+B,KAAK,UACnDH,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACE,KAAK,OAAOG,SArBPhC,IAClBb,EAAa8C,IAAIC,gBAAgBlC,EAAMI,OAAO+B,MAAM,IAAI,QAuBpDT,EAAAA,EAAAA,KAAA,OAAK/B,UAAWC,EAAaC,SAC1Bd,EAASqD,OAAS,IAAKV,EAAAA,EAAAA,KAAA,KAAA7B,SAAId,OAG9BW,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7B6B,EAAAA,EAAAA,KAAA,SAAOG,KAAK,QAAQQ,MAAM,QAAQC,QAzBpBC,KACpBpD,EAAa,MACbH,EAAY,GAAG,KAwBT0C,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQhC,SAAC,cAGzBX,IACCwC,EAAAA,EAAAA,KAAA,OACEc,IAAKtD,EACLuD,IAAI,oBACJ9C,UAAWC,IAGdR,IACCsC,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,YAAavD,EAAoBwD,aAActD,EAAkBK,UAAU,gBAAeE,UAC/FH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnC6B,EAAAA,EAAAA,KAAA,KAAA7B,SAAG,6CACH6B,EAAAA,EAAAA,KAAA,UAAQY,QAAShD,EAAiBO,SAAC,iBAIrC,C","sources":["webpack://cocktails/./src/pages/AddNewCocktail.module.css?be93","pages/AddNewCocktail.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form_container\":\"AddNewCocktail_form_container__pYswW\",\"new_cocktail_form\":\"AddNewCocktail_new_cocktail_form__g-35k\",\"uploaded_img\":\"AddNewCocktail_uploaded_img__oibSt\",\"error\":\"AddNewCocktail_error__rJ092\",\"actions\":\"AddNewCocktail_actions__vhTBA\",\"success_modal\":\"AddNewCocktail_success_modal__thIsb\"};","import React, { useState } from \"react\";\r\n\r\nimport Input from \"../ui/Input\";\r\nimport Modal from '../ui/Modal';\r\nimport { NewCocktail } from \"../assets/types\";\r\nimport styles from \"./AddNewCocktail.module.css\";\r\nimport {ERROR_NAME,ERROR_INGREDIANTS,ERROR_INSTRUCTIONS,} from \"../assets/constants\";\r\n\r\nconst AddNewCocktail = () => {\r\n\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState<null | any>();\r\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\r\n\r\n  const checkFormValidation = (newCocktailData: NewCocktail) => {\r\n    var regex = new RegExp(\"^[a-zA-Z,]*$\");\r\n\r\n    if (!newCocktailData.cocktailName) {\r\n      return ERROR_NAME;\r\n    }\r\n    if (!newCocktailData.ingredients || !regex.test(newCocktailData.ingredients)) {\r\n      return ERROR_INGREDIANTS;\r\n    }\r\n    if (!newCocktailData.instructions) {\r\n      return ERROR_INSTRUCTIONS;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const handleSubmitForm = (event: any) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.target);\r\n    const newCocktailToAdd = Object.fromEntries(formData.entries()) as NewCocktail;\r\n\r\n    const error = checkFormValidation(newCocktailToAdd);\r\n    if (error) {\r\n      setErrorMsg(error);\r\n    } else {\r\n      setErrorMsg(\"\");\r\n      newCocktailToAdd.file = imageFile;\r\n      localStorage.setItem(newCocktailToAdd.cocktailName, JSON.stringify(newCocktailToAdd));\r\n      setIsSuccessModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const uploadFile = (event: any) => {\r\n    setImageFile(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  const onClearButton = () => {\r\n    setImageFile(null);\r\n    setErrorMsg(\"\");\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setIsSuccessModalOpen(false);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className={styles.form_container}>\r\n      <form id=\"new-cocktail-form\" onSubmit={handleSubmitForm} className={styles.new_cocktail_form}>\r\n        <div>\r\n          <Input label=\"Cocktail name\" id=\"cocktailName\" type=\"text\" />\r\n          <Input label=\"Ingredients\" id=\"ingredients\" type=\"text\" pattern=\"^[a-zA-Z,]*$\"  title=\"only letters and commas are allowed\"/>\r\n          <Input label=\"Instructions\" id=\"instructions\" type=\"text\" />\r\n          <Input type=\"file\" onChange={uploadFile} />\r\n        </div>\r\n\r\n        <div className={styles.error}>\r\n          {errorMsg.length > 0 && <p>{errorMsg}</p>}\r\n        </div>\r\n\r\n        <div className={styles.actions}>\r\n          <input type=\"reset\" value=\"Clear\" onClick={onClearButton} />\r\n          <button type=\"submit\">Add</button>\r\n        </div>\r\n      </form>\r\n      {imageFile && (\r\n        <img\r\n          src={imageFile}\r\n          alt=\"the uploaded file\"\r\n          className={styles.uploaded_img}\r\n        />\r\n      )}\r\n      {isSuccessModalOpen && (\r\n        <Modal isModalOpen={isSuccessModalOpen} onCloseModal={handleCloseModal} className=\"success_modal\"> \r\n          <div className={styles.success_modal}>\r\n            <p>Your request was submitted successfully</p>\r\n            <button onClick={handleCloseModal}>Close</button>\r\n          </div>\r\n        </Modal>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewCocktail;\r\n"],"names":["AddNewCocktail","errorMsg","setErrorMsg","useState","imageFile","setImageFile","isSuccessModalOpen","setIsSuccessModalOpen","handleCloseModal","window","location","reload","_jsxs","className","styles","children","id","onSubmit","event","preventDefault","formData","FormData","target","newCocktailToAdd","Object","fromEntries","entries","error","newCocktailData","regex","RegExp","cocktailName","ingredients","test","instructions","ERROR_INSTRUCTIONS","ERROR_INGREDIANTS","ERROR_NAME","checkFormValidation","file","localStorage","setItem","JSON","stringify","_jsx","Input","label","type","pattern","title","onChange","URL","createObjectURL","files","length","value","onClick","onClearButton","src","alt","Modal","isModalOpen","onCloseModal"],"sourceRoot":""}